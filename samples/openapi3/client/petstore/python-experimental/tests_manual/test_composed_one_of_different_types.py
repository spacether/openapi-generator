# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest
from datetime import date, datetime

import petstore_api
from petstore_api.model_utils import Enum
from petstore_api.model.animal import Animal
from petstore_api.model.cat import Cat
from petstore_api.model.composed_one_of_different_types import ComposedOneOfDifferentTypes
from petstore_api.model.number_with_validations import NumberWithValidations

class TestComposedOneOfDifferentTypes(unittest.TestCase):
    """ComposedOneOfDifferentTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_ComposedOneOfDifferentTypes(self):
        """Test ComposedOneOfDifferentTypes"""
        # we can make an instance that stores float data
        inst = ComposedOneOfDifferentTypes(10.0)
        assert isinstance(inst, NumberWithValidations)

        # we can make an instance that stores object (dict) data
        inst = ComposedOneOfDifferentTypes(className="Cat", color="black")
        assert isinstance(inst, ComposedOneOfDifferentTypes)
        assert isinstance(inst, Animal)
        assert isinstance(inst, Cat)
        assert isinstance(inst, dict)

        # object that holds 4 properties and is not an Animal
        inst = ComposedOneOfDifferentTypes(a="a", b="b", c="c", d="d")
        assert isinstance(inst, ComposedOneOfDifferentTypes)
        assert not isinstance(inst, Animal)
        assert isinstance(inst, dict)

        # None
        inst = ComposedOneOfDifferentTypes(None)
        assert isinstance(inst, ComposedOneOfDifferentTypes)
        assert isinstance(inst, Enum)
        assert inst.name == "NONE"
        assert inst.value is None

        # date
        inst = ComposedOneOfDifferentTypes('2019-01-10', _from_server=True)
        assert isinstance(inst, ComposedOneOfDifferentTypes)
        assert isinstance(inst, date)
        assert inst.year == 2019
        assert inst.month == 1
        assert inst.day == 10

        # date-time
        inst = ComposedOneOfDifferentTypes('2020-01-02T03:04:05Z', _from_server=True)
        assert isinstance(inst, ComposedOneOfDifferentTypes)
        assert isinstance(inst, datetime)
        assert inst.year == 2020
        assert inst.month == 1
        assert inst.day == 2

if __name__ == '__main__':
    unittest.main()
